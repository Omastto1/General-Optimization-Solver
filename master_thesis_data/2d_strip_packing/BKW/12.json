{
    "benchmark_name": "BKW",
    "instance_name": "12",
    "instance_kind": "2DSTRIPPACKING",
    "data": {
        "strip_width": 100,
        "rectangles": [
            {
                "width": 5,
                "height": 4
            },
            {
                "width": 3,
                "height": 13
            },
            {
                "width": 49,
                "height": 3
            },
            {
                "width": 3,
                "height": 5
            },
            {
                "width": 5,
                "height": 5
            },
            {
                "width": 3,
                "height": 3
            },
            {
                "width": 4,
                "height": 10
            },
            {
                "width": 3,
                "height": 4
            },
            {
                "width": 4,
                "height": 11
            },
            {
                "width": 3,
                "height": 7
            },
            {
                "width": 9,
                "height": 8
            },
            {
                "width": 7,
                "height": 33
            },
            {
                "width": 5,
                "height": 3
            },
            {
                "width": 4,
                "height": 5
            },
            {
                "width": 12,
                "height": 5
            },
            {
                "width": 4,
                "height": 4
            },
            {
                "width": 4,
                "height": 8
            },
            {
                "width": 4,
                "height": 3
            },
            {
                "width": 12,
                "height": 33
            },
            {
                "width": 7,
                "height": 3
            },
            {
                "width": 5,
                "height": 8
            },
            {
                "width": 34,
                "height": 12
            },
            {
                "width": 3,
                "height": 6
            },
            {
                "width": 5,
                "height": 34
            },
            {
                "width": 3,
                "height": 21
            },
            {
                "width": 3,
                "height": 28
            },
            {
                "width": 3,
                "height": 14
            },
            {
                "width": 31,
                "height": 5
            },
            {
                "width": 5,
                "height": 20
            },
            {
                "width": 3,
                "height": 26
            },
            {
                "width": 17,
                "height": 3
            },
            {
                "width": 5,
                "height": 7
            },
            {
                "width": 5,
                "height": 9
            },
            {
                "width": 54,
                "height": 13
            },
            {
                "width": 10,
                "height": 10
            },
            {
                "width": 14,
                "height": 3
            },
            {
                "width": 5,
                "height": 6
            },
            {
                "width": 14,
                "height": 27
            },
            {
                "width": 11,
                "height": 3
            },
            {
                "width": 18,
                "height": 9
            },
            {
                "width": 4,
                "height": 16
            },
            {
                "width": 3,
                "height": 16
            },
            {
                "width": 12,
                "height": 3
            },
            {
                "width": 3,
                "height": 18
            },
            {
                "width": 7,
                "height": 6
            },
            {
                "width": 12,
                "height": 19
            },
            {
                "width": 3,
                "height": 17
            },
            {
                "width": 3,
                "height": 12
            },
            {
                "width": 5,
                "height": 10
            },
            {
                "width": 54,
                "height": 19
            },
            {
                "width": 15,
                "height": 23
            },
            {
                "width": 19,
                "height": 12
            },
            {
                "width": 5,
                "height": 18
            },
            {
                "width": 33,
                "height": 18
            },
            {
                "width": 3,
                "height": 10
            },
            {
                "width": 5,
                "height": 11
            },
            {
                "width": 9,
                "height": 34
            },
            {
                "width": 5,
                "height": 16
            },
            {
                "width": 3,
                "height": 36
            },
            {
                "width": 21,
                "height": 3
            },
            {
                "width": 7,
                "height": 4
            },
            {
                "width": 8,
                "height": 7
            },
            {
                "width": 4,
                "height": 24
            },
            {
                "width": 18,
                "height": 25
            },
            {
                "width": 4,
                "height": 28
            },
            {
                "width": 22,
                "height": 10
            },
            {
                "width": 4,
                "height": 6
            },
            {
                "width": 20,
                "height": 4
            },
            {
                "width": 12,
                "height": 4
            },
            {
                "width": 3,
                "height": 8
            },
            {
                "width": 3,
                "height": 44
            },
            {
                "width": 18,
                "height": 5
            },
            {
                "width": 9,
                "height": 5
            },
            {
                "width": 3,
                "height": 29
            },
            {
                "width": 4,
                "height": 7
            },
            {
                "width": 8,
                "height": 58
            },
            {
                "width": 14,
                "height": 5
            },
            {
                "width": 6,
                "height": 16
            },
            {
                "width": 28,
                "height": 5
            },
            {
                "width": 8,
                "height": 4
            },
            {
                "width": 3,
                "height": 68
            },
            {
                "width": 7,
                "height": 15
            },
            {
                "width": 6,
                "height": 5
            },
            {
                "width": 9,
                "height": 3
            },
            {
                "width": 4,
                "height": 14
            },
            {
                "width": 10,
                "height": 25
            },
            {
                "width": 11,
                "height": 49
            },
            {
                "width": 15,
                "height": 4
            },
            {
                "width": 8,
                "height": 3
            },
            {
                "width": 6,
                "height": 12
            },
            {
                "width": 4,
                "height": 75
            },
            {
                "width": 8,
                "height": 6
            },
            {
                "width": 22,
                "height": 5
            },
            {
                "width": 9,
                "height": 23
            },
            {
                "width": 12,
                "height": 31
            },
            {
                "width": 31,
                "height": 3
            },
            {
                "width": 15,
                "height": 8
            },
            {
                "width": 3,
                "height": 9
            },
            {
                "width": 36,
                "height": 27
            },
            {
                "width": 5,
                "height": 51
            },
            {
                "width": 3,
                "height": 35
            },
            {
                "width": 18,
                "height": 3
            },
            {
                "width": 3,
                "height": 23
            },
            {
                "width": 5,
                "height": 13
            },
            {
                "width": 5,
                "height": 23
            },
            {
                "width": 43,
                "height": 11
            },
            {
                "width": 31,
                "height": 61
            },
            {
                "width": 3,
                "height": 11
            },
            {
                "width": 10,
                "height": 125
            },
            {
                "width": 5,
                "height": 94
            },
            {
                "width": 6,
                "height": 8
            },
            {
                "width": 3,
                "height": 25
            },
            {
                "width": 4,
                "height": 9
            },
            {
                "width": 18,
                "height": 24
            },
            {
                "width": 36,
                "height": 33
            },
            {
                "width": 16,
                "height": 8
            },
            {
                "width": 4,
                "height": 26
            },
            {
                "width": 40,
                "height": 10
            },
            {
                "width": 9,
                "height": 18
            },
            {
                "width": 6,
                "height": 98
            },
            {
                "width": 10,
                "height": 27
            },
            {
                "width": 10,
                "height": 17
            },
            {
                "width": 3,
                "height": 51
            },
            {
                "width": 8,
                "height": 98
            },
            {
                "width": 6,
                "height": 7
            },
            {
                "width": 3,
                "height": 33
            },
            {
                "width": 7,
                "height": 20
            },
            {
                "width": 4,
                "height": 13
            },
            {
                "width": 6,
                "height": 35
            },
            {
                "width": 24,
                "height": 4
            },
            {
                "width": 30,
                "height": 4
            }
        ]
    },
    "reference_solution": {
        "feasible": true,
        "optimum": 300
    },
    "run_history": [
        {
            "timestamp": "2023-12-02 13:39:15.754916",
            "solver_type": "GA",
            "solver_name": "naive GA 200_1.0",
            "solver_config": {
                "seed": 1,
                "algorithm": {
                    "problem": null,
                    "termination": {
                        "force_termination": false,
                        "perc": 0.0,
                        "x": {
                            "force_termination": false,
                            "perc": 0.0,
                            "termination": {
                                "force_termination": false,
                                "perc": 0.0,
                                "tol": 1e-08,
                                "data": null,
                                "counter": 0,
                                "n_skip": 0
                            },
                            "history": {
                                "size": 30
                            }
                        },
                        "cv": {
                            "force_termination": false,
                            "perc": 0.0,
                            "termination": {
                                "force_termination": false,
                                "perc": 0.0,
                                "tol": 1e-08,
                                "data": null,
                                "counter": 0,
                                "n_skip": 0,
                                "terminate_when_feasible": false
                            },
                            "history": {
                                "size": 30
                            }
                        },
                        "f": {
                            "force_termination": false,
                            "perc": 0.0,
                            "termination": {
                                "force_termination": false,
                                "perc": 0.0,
                                "tol": 1e-06,
                                "data": null,
                                "counter": 0,
                                "n_skip": 0,
                                "only_feas": true
                            },
                            "history": {
                                "size": 30
                            }
                        },
                        "max_gen": {
                            "force_termination": false,
                            "perc": 0.0,
                            "n_max_gen": 1000
                        },
                        "max_evals": {
                            "force_termination": false,
                            "perc": 0.0,
                            "n_max_evals": 100000
                        },
                        "criteria": [
                            "<pymoo.termination.robust.RobustTermination object at 0x7fb19afc3c70>",
                            "<pymoo.termination.robust.RobustTermination object at 0x7fb19afc3d30>",
                            "<pymoo.termination.robust.RobustTermination object at 0x7fb19afc3df0>",
                            "<pymoo.termination.max_gen.MaximumGenerationTermination object at 0x7fb19afc3eb0>",
                            "<pymoo.termination.max_eval.MaximumFunctionCallTermination object at 0x7fb19afc3e80>"
                        ]
                    },
                    "output": {
                        "data": {},
                        "is_initialized": false,
                        "n_gen": {
                            "name": "n_gen",
                            "func": null,
                            "width": 6,
                            "truncate": true,
                            "value": null
                        },
                        "n_eval": {
                            "name": "n_eval",
                            "func": null,
                            "width": 8,
                            "truncate": true,
                            "value": null
                        },
                        "columns": [
                            "<pymoo.util.display.output.NumberOfGenerations object at 0x7fb19d981940>",
                            "<pymoo.util.display.output.NumberOfEvaluations object at 0x7fb19d9819a0>"
                        ],
                        "cv_min": {
                            "name": "cv_min",
                            "func": null,
                            "width": 13,
                            "truncate": true,
                            "value": null
                        },
                        "cv_avg": {
                            "name": "cv_avg",
                            "func": null,
                            "width": 13,
                            "truncate": true,
                            "value": null
                        },
                        "f_min": {
                            "name": "f_min",
                            "func": null,
                            "width": 13,
                            "truncate": true,
                            "value": null
                        },
                        "f_avg": {
                            "name": "f_avg",
                            "func": null,
                            "width": 13,
                            "truncate": true,
                            "value": null
                        },
                        "f_gap": {
                            "name": "f_gap",
                            "func": null,
                            "width": 13,
                            "truncate": true,
                            "value": null
                        },
                        "best": null
                    },
                    "archive": null,
                    "display": null,
                    "callback": {
                        "data": {},
                        "is_initialized": false
                    },
                    "return_least_infeasible": false,
                    "save_history": false,
                    "verbose": false,
                    "seed": null,
                    "evaluator": {
                        "evaluate_values_of": [
                            "F",
                            "G",
                            "H"
                        ],
                        "skip_already_evaluated": true,
                        "callback": null,
                        "n_eval": 0
                    },
                    "history": [],
                    "pop": null,
                    "off": null,
                    "opt": null,
                    "n_iter": null,
                    "data": {},
                    "is_initialized": false,
                    "start_time": null,
                    "pop_size": 200,
                    "advance_after_initial_infill": false,
                    "survival": {
                        "filter_infeasible": false
                    },
                    "n_offsprings": 200,
                    "eliminate_duplicates": {
                        "func": {},
                        "epsilon": 1e-16
                    },
                    "repair": {
                        "name": "NoRepair",
                        "vtype": null,
                        "repair": null
                    },
                    "initialization": {
                        "sampling": {
                            "name": "FloatRandomSampling",
                            "vtype": null,
                            "repair": null
                        },
                        "eliminate_duplicates": {
                            "func": {},
                            "epsilon": 1e-16
                        },
                        "repair": {
                            "name": "NoRepair",
                            "vtype": null,
                            "repair": null
                        }
                    },
                    "mating": {
                        "n_max_iterations": 100,
                        "eliminate_duplicates": {
                            "func": {},
                            "epsilon": 1e-16
                        },
                        "repair": {
                            "name": "NoRepair",
                            "vtype": null,
                            "repair": null
                        },
                        "selection": {
                            "name": "TournamentSelection",
                            "vtype": null,
                            "repair": null,
                            "pressure": 2,
                            "func_comp": {}
                        },
                        "crossover": {
                            "name": "TwoPointCrossover",
                            "vtype": null,
                            "repair": null,
                            "n_parents": 2,
                            "n_offsprings": 2,
                            "prob": {
                                "value": 1.0,
                                "flag": "default",
                                "active": true,
                                "bounds": [
                                    0.5,
                                    1.0
                                ],
                                "strict": [
                                    0.0,
                                    1.0
                                ]
                            },
                            "n_points": 2
                        },
                        "mutation": {
                            "name": "PolynomialMutation",
                            "vtype": null,
                            "repair": null,
                            "prob": {
                                "value": 0.9,
                                "flag": "default",
                                "active": true,
                                "bounds": [
                                    0.7,
                                    1.0
                                ],
                                "strict": [
                                    0.0,
                                    1.0
                                ]
                            },
                            "prob_var": null,
                            "at_least_once": false,
                            "eta": {
                                "value": 20,
                                "flag": "default",
                                "active": true,
                                "bounds": [
                                    3.0,
                                    30.0
                                ],
                                "strict": [
                                    1.0,
                                    100.0
                                ]
                            }
                        }
                    }
                },
                "fitness_func": "<function fitness_func at 0x7fb19afc0940>",
                "termination": "<pymoo.termination.robust.RobustTermination object at 0x7fb1a377a490>"
            },
            "solve_status": "Feasible",
            "solve_time": 60.13,
            "solution_value": 480.0,
            "solution_info": {
                "placements": [
                    [
                        54,
                        251
                    ],
                    [
                        58,
                        125
                    ],
                    [
                        0,
                        248
                    ],
                    [
                        51,
                        251
                    ],
                    [
                        9,
                        100
                    ],
                    [
                        12,
                        240
                    ],
                    [
                        5,
                        100
                    ],
                    [
                        86,
                        0
                    ],
                    [
                        94,
                        280
                    ],
                    [
                        0,
                        280
                    ],
                    [
                        17,
                        207
                    ],
                    [
                        63,
                        207
                    ],
                    [
                        0,
                        475
                    ],
                    [
                        36,
                        100
                    ],
                    [
                        71,
                        315
                    ],
                    [
                        71,
                        125
                    ],
                    [
                        45,
                        240
                    ],
                    [
                        40,
                        251
                    ],
                    [
                        26,
                        207
                    ],
                    [
                        0,
                        156
                    ],
                    [
                        67,
                        340
                    ],
                    [
                        12,
                        125
                    ],
                    [
                        61,
                        240
                    ],
                    [
                        26,
                        280
                    ],
                    [
                        55,
                        125
                    ],
                    [
                        17,
                        156
                    ],
                    [
                        6,
                        261
                    ],
                    [
                        19,
                        113
                    ],
                    [
                        28,
                        315
                    ],
                    [
                        49,
                        350
                    ],
                    [
                        28,
                        340
                    ],
                    [
                        58,
                        207
                    ],
                    [
                        89,
                        0
                    ],
                    [
                        44,
                        100
                    ],
                    [
                        75,
                        125
                    ],
                    [
                        22,
                        100
                    ],
                    [
                        39,
                        315
                    ],
                    [
                        85,
                        156
                    ],
                    [
                        49,
                        248
                    ],
                    [
                        59,
                        0
                    ],
                    [
                        13,
                        156
                    ],
                    [
                        44,
                        315
                    ],
                    [
                        0,
                        240
                    ],
                    [
                        9,
                        261
                    ],
                    [
                        0,
                        0
                    ],
                    [
                        3,
                        280
                    ],
                    [
                        0,
                        315
                    ],
                    [
                        50,
                        75
                    ],
                    [
                        59,
                        251
                    ],
                    [
                        45,
                        261
                    ],
                    [
                        24,
                        156
                    ],
                    [
                        0,
                        113
                    ],
                    [
                        15,
                        280
                    ],
                    [
                        12,
                        261
                    ],
                    [
                        91,
                        280
                    ],
                    [
                        0,
                        100
                    ],
                    [
                        77,
                        0
                    ],
                    [
                        38,
                        207
                    ],
                    [
                        10,
                        156
                    ],
                    [
                        60,
                        248
                    ],
                    [
                        44,
                        251
                    ],
                    [
                        14,
                        100
                    ],
                    [
                        20,
                        156
                    ],
                    [
                        10,
                        315
                    ],
                    [
                        70,
                        207
                    ],
                    [
                        45,
                        340
                    ],
                    [
                        61,
                        125
                    ],
                    [
                        31,
                        280
                    ],
                    [
                        49,
                        240
                    ],
                    [
                        72,
                        251
                    ],
                    [
                        39,
                        156
                    ],
                    [
                        68,
                        240
                    ],
                    [
                        41,
                        75
                    ],
                    [
                        94,
                        125
                    ],
                    [
                        64,
                        240
                    ],
                    [
                        52,
                        350
                    ],
                    [
                        5,
                        475
                    ],
                    [
                        33,
                        315
                    ],
                    [
                        0,
                        340
                    ],
                    [
                        86,
                        240
                    ],
                    [
                        7,
                        0
                    ],
                    [
                        10,
                        207
                    ],
                    [
                        31,
                        350
                    ],
                    [
                        46,
                        125
                    ],
                    [
                        0,
                        75
                    ],
                    [
                        28,
                        75
                    ],
                    [
                        78,
                        350
                    ],
                    [
                        4,
                        75
                    ],
                    [
                        15,
                        240
                    ],
                    [
                        0,
                        261
                    ],
                    [
                        10,
                        0
                    ],
                    [
                        64,
                        251
                    ],
                    [
                        23,
                        240
                    ],
                    [
                        85,
                        125
                    ],
                    [
                        0,
                        125
                    ],
                    [
                        53,
                        75
                    ],
                    [
                        43,
                        207
                    ],
                    [
                        93,
                        251
                    ],
                    [
                        51,
                        280
                    ],
                    [
                        89,
                        350
                    ],
                    [
                        37,
                        350
                    ],
                    [
                        75,
                        251
                    ],
                    [
                        38,
                        75
                    ],
                    [
                        92,
                        207
                    ],
                    [
                        44,
                        0
                    ],
                    [
                        50,
                        113
                    ],
                    [
                        0,
                        350
                    ],
                    [
                        97,
                        207
                    ],
                    [
                        68,
                        350
                    ],
                    [
                        94,
                        350
                    ],
                    [
                        65,
                        125
                    ],
                    [
                        7,
                        315
                    ],
                    [
                        3,
                        315
                    ],
                    [
                        74,
                        207
                    ],
                    [
                        42,
                        156
                    ],
                    [
                        84,
                        75
                    ],
                    [
                        87,
                        280
                    ],
                    [
                        0,
                        251
                    ],
                    [
                        19,
                        75
                    ],
                    [
                        43,
                        350
                    ],
                    [
                        0,
                        207
                    ],
                    [
                        49,
                        0
                    ],
                    [
                        7,
                        156
                    ],
                    [
                        60,
                        350
                    ],
                    [
                        94,
                        0
                    ],
                    [
                        40,
                        350
                    ],
                    [
                        78,
                        156
                    ],
                    [
                        40,
                        100
                    ],
                    [
                        20,
                        280
                    ],
                    [
                        47,
                        315
                    ],
                    [
                        14,
                        0
                    ]
                ]
            },
            "solution_progress": []
        },
        {
            "timestamp": "2023-12-02 13:43:57.262531",
            "solver_type": "CP",
            "solver_name": "CP Default Not Oriented",
            "solver_config": {
                "TimeLimit": 15,
                "NoWorkers": 1,
                "NoCores": 32,
                "SolverVersion": "12.9.0.0"
            },
            "solve_status": "Feasible",
            "solve_time": [
                15.06
            ],
            "solution_value": 2452,
            "solution_info": {
                "Model constraints": 8646,
                "variables": {
                    "integer": 1,
                    "interval": 262,
                    "sequence": 0
                },
                "Solve status": "Feasible",
                "Search status": "SearchStopped",
                "Search status stop cause": "SearchStoppedByLimit",
                "Solve time": "15.06 sec",
                "Objective values": [
                    2452
                ],
                "Bounds": [
                    125
                ],
                "Gaps": [
                    0.949021
                ],
                "Variables": {
                    "Anonymous variables": 263
                }
            },
            "solution_progress": [
                [
                    2452,
                    0.84
                ]
            ]
        },
        {
            "timestamp": "2023-12-02 13:50:53.620766",
            "solver_type": "CP",
            "solver_name": "CP Default Not Oriented Hybrid ftol",
            "solver_config": {
                "TimeLimit": 10,
                "NoWorkers": 1,
                "NoCores": 32,
                "SolverVersion": "12.9.0.0"
            },
            "solve_status": "Feasible",
            "solve_time": [
                10.03
            ],
            "solution_value": 441,
            "solution_info": {
                "Model constraints": 8646,
                "variables": {
                    "integer": 1,
                    "interval": 262,
                    "sequence": 0
                },
                "Solve status": "Feasible",
                "Search status": "SearchStopped",
                "Search status stop cause": "SearchStoppedByLimit",
                "Solve time": "10.03 sec",
                "Objective values": [
                    441
                ],
                "Bounds": [
                    125
                ],
                "Gaps": [
                    0.716553
                ],
                "Variables": {
                    "Anonymous variables": 263
                }
            },
            "solution_progress": [
                [
                    492,
                    0.63
                ],
                [
                    491,
                    0.68
                ],
                [
                    487,
                    0.73
                ],
                [
                    480,
                    0.75
                ],
                [
                    478,
                    0.82
                ],
                [
                    458,
                    0.95
                ],
                [
                    450,
                    1.03
                ],
                [
                    441,
                    1.07
                ]
            ]
        },
        {
            "timestamp": "2023-12-02 14:03:56.169176",
            "solver_type": "CP",
            "solver_name": "CP Default Not Oriented Hybrid",
            "solver_config": {
                "TimeLimit": 10,
                "NoWorkers": 32,
                "NoCores": 32,
                "SolverVersion": "12.9.0.0"
            },
            "solve_status": "Feasible",
            "solve_time": [
                11.34
            ],
            "solution_value": 446,
            "solution_info": {
                "Model constraints": 8646,
                "variables": {
                    "integer": 1,
                    "interval": 262,
                    "sequence": 0
                },
                "Solve status": "Feasible",
                "Search status": "SearchStopped",
                "Search status stop cause": "SearchStoppedByLimit",
                "Solve time": "11.34 sec",
                "Objective values": [
                    446
                ],
                "Bounds": [
                    125
                ],
                "Gaps": [
                    0.719731
                ],
                "Variables": {
                    "Anonymous variables": 263
                }
            },
            "solution_progress": [
                [
                    551,
                    5.05
                ],
                [
                    543,
                    5.05
                ],
                [
                    541,
                    5.05
                ],
                [
                    538,
                    5.06
                ],
                [
                    537,
                    5.07
                ],
                [
                    524,
                    7.55
                ],
                [
                    497,
                    7.55
                ],
                [
                    477,
                    7.56
                ],
                [
                    463,
                    7.63
                ],
                [
                    459,
                    9.83
                ],
                [
                    448,
                    9.87
                ],
                [
                    446,
                    9.94
                ]
            ]
        }
    ]
}