{
    "benchmark_name": "jobshop",
    "instance_name": "la03",
    "instance_kind": "JOBSHOP",
    "data": {
        "no_jobs": 10,
        "no_machines": 5,
        "machines": [
            [
                1,
                2,
                0,
                4,
                3
            ],
            [
                2,
                1,
                0,
                4,
                3
            ],
            [
                2,
                3,
                4,
                0,
                1
            ],
            [
                4,
                0,
                2,
                1,
                3
            ],
            [
                4,
                0,
                1,
                3,
                2
            ],
            [
                4,
                0,
                1,
                2,
                3
            ],
            [
                3,
                2,
                0,
                4,
                1
            ],
            [
                4,
                1,
                0,
                2,
                3
            ],
            [
                4,
                0,
                3,
                2,
                1
            ],
            [
                4,
                1,
                0,
                2,
                3
            ]
        ],
        "durations": [
            [
                23,
                45,
                82,
                84,
                38
            ],
            [
                21,
                29,
                18,
                41,
                50
            ],
            [
                38,
                54,
                16,
                52,
                52
            ],
            [
                37,
                54,
                74,
                62,
                57
            ],
            [
                57,
                81,
                61,
                68,
                30
            ],
            [
                81,
                79,
                89,
                89,
                11
            ],
            [
                33,
                20,
                91,
                20,
                66
            ],
            [
                24,
                84,
                32,
                55,
                8
            ],
            [
                56,
                7,
                54,
                64,
                39
            ],
            [
                40,
                83,
                19,
                8,
                7
            ]
        ]
    },
    "reference_solution": {
        "feasible": true,
        "optimum": 597
    },
    "run_history": [
        {
            "timestamp": "2023-06-02 01:10:30.849460",
            "method": "CP",
            "solution_value": 597,
            "solution_info": "-------------------------------------------------------------------------------\nModel constraints: 47, variables: integer: 1, interval: 50, sequence: 5\nSolve status: Optimal\nSearch status: SearchCompleted, stop cause: SearchHasNotBeenStopped\nSolve time: 1.27 sec\n-------------------------------------------------------------------------------\nObjective values: (597,), bounds: (597,), gaps: (0,)\ncost=597\nJ_0_0: (start=0, end=23, size=23, length=23)\nJ_0_1: (start=165, end=210, size=45, length=45)\nJ_0_2: (start=376, end=458, size=82, length=82)\nJ_0_3: (start=458, end=542, size=84, length=84)\nJ_0_4: (start=542, end=580, size=38, length=38)\nJ_1_0: (start=0, end=21, size=21, length=21)\nJ_1_1: (start=23, end=52, size=29, length=29)\nJ_1_2: (start=261, end=279, size=18, length=18)\nJ_1_3: (start=295, end=336, size=41, length=41)\nJ_1_4: (start=397, end=447, size=50, length=50)\nJ_2_0: (start=53, end=91, size=38, length=38)\nJ_2_1: (start=91, end=145, size=54, length=54)\nJ_2_2: (start=356, end=372, size=16, length=16)\nJ_2_3: (start=490, end=542, size=52, length=52)\nJ_2_4: (start=545, end=597, size=52, length=52)\nJ_3_0: (start=0, end=37, size=37, length=37)\nJ_3_1: (start=37, end=91, size=54, length=54)\nJ_3_2: (start=91, end=165, size=74, length=74)\nJ_3_3: (start=228, end=290, size=62, length=62)\nJ_3_4: (start=340, end=397, size=57, length=57)\nJ_4_0: (start=238, end=295, size=57, length=57)\nJ_4_1: (start=295, end=376, size=81, length=81)\nJ_4_2: (start=379, end=440, size=61, length=61)\nJ_4_3: (start=447, end=515, size=68, length=68)\nJ_4_4: (start=548, end=578, size=30, length=30)\nJ_5_0: (start=101, end=182, size=81, length=81)\nJ_5_1: (start=182, end=261, size=79, length=79)\nJ_5_2: (start=290, end=379, size=89, length=89)\nJ_5_3: (start=404, end=493, size=89, length=89)\nJ_5_4: (start=515, end=526, size=11, length=11)\nJ_6_0: (start=0, end=33, size=33, length=33)\nJ_6_1: (start=33, end=53, size=20, length=20)\nJ_6_2: (start=91, end=182, size=91, length=91)\nJ_6_3: (start=336, end=356, size=20, length=20)\nJ_6_4: (start=440, end=506, size=66, length=66)\nJ_7_0: (start=37, end=61, size=24, length=24)\nJ_7_1: (start=61, end=145, size=84, length=84)\nJ_7_2: (start=458, end=490, size=32, length=32)\nJ_7_3: (start=493, end=548, size=55, length=55)\nJ_7_4: (start=580, end=588, size=8, length=8)\nJ_8_0: (start=182, end=238, size=56, length=56)\nJ_8_1: (start=279, end=286, size=7, length=7)\nJ_8_2: (start=286, end=340, size=54, length=54)\nJ_8_3: (start=340, end=404, size=64, length=64)\nJ_8_4: (start=506, end=545, size=39, length=39)\nJ_9_0: (start=61, end=101, size=40, length=40)\nJ_9_1: (start=145, end=228, size=83, length=83)\nJ_9_2: (start=542, end=561, size=19, length=19)\nJ_9_3: (start=578, end=586, size=8, length=8)\nJ_9_4: (start=588, end=595, size=7, length=7)\n",
            "solve_status": "Optimal",
            "solve_time": 1.2666435241699219,
            "solver_config": {
                "TimeLimit": 60,
                "NoWorkers": 14,
                "NoCores": 56,
                "SolverVersion": "20.1.0.0"
            },
            "solution_progress": [
                [
                    845,
                    101,
                    0.65
                ],
                [
                    804,
                    201,
                    0.65
                ],
                [
                    704,
                    301,
                    0.65
                ],
                [
                    699,
                    401,
                    0.65
                ],
                [
                    665,
                    701,
                    0.65
                ],
                [
                    659,
                    778,
                    0.65
                ],
                [
                    628,
                    1221,
                    0.65
                ],
                [
                    621,
                    2914,
                    0.65
                ],
                [
                    605,
                    3343,
                    0.65
                ],
                [
                    599,
                    9145,
                    1.07
                ],
                [
                    597,
                    10239,
                    1.07
                ]
            ]
        }
    ]
}